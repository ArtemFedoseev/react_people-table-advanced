{"version":3,"sources":["types.ts","Components/Nav/Nav.tsx","Components/HomePage/HomePage.tsx","Components/PeoplePage/utils.ts","Components/SortableColumnName/SortableColumnName.tsx","Components/PersonName/PersonName.tsx","Components/PersonRow/PersonRow.tsx","Components/PeopleTable/columnNames.ts","Components/PeopleTable/PeopleTable.tsx","Components/PeoplePage/PeoplePage.tsx","api.ts","Components/NewPerson/InputComponents/NameInput/NameInput.tsx","Components/NewPerson/InputComponents/ParentSelect/ParentSelect.tsx","Components/NewPerson/InputComponents/SexSelection/SexSelection.tsx","Components/NewPerson/InputComponents/YearSelection/YearSelection.tsx","Components/NewPerson/utils.ts","Components/NewPerson/NewPerson.tsx","Components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["SortBy","SortOrder","Nav","className","type","to","isActive","classNames","HomePage","processPeople","people","map","person","mother","find","woman","name","motherName","father","man","fatherName","SortableColumnName","title","sortBy","selectedSortBy","selectedSortOrder","handleSortByChange","onClick","src","alt","PersonName","slug","sex","search","useLocation","pathname","style","color","renderParent","parent","useName","fontWeight","PersonRow","born","died","useMotherName","useFatherName","selectedSlug","useParams","columnNames","PeopleTable","filteredPeople","PeoplePage","useState","setPeople","loading","setLoading","navigate","useNavigate","searchParams","URLSearchParams","appliedQuery","get","convertToSortByEnum","sortOrder","asc","desc","convertToSortOrderEnum","enteredQuery","setEnteredQuery","loadPeople","a","fetch","then","res","json","peopleFromServer","applyQuery","useCallback","debounce","newQuery","set","delete","toString","useEffect","lowerCaseQuery","toLowerCase","filter","some","field","includes","result","sort","personA","personB","localeCompare","reverse","sortPeople","placeholder","value","onChange","event","target","context","NameInput","handleInputChange","validateFields","errors","isEmpty","hasForbiddenSymbols","userAlreadyExists","htmlFor","id","e","onBlur","ParentSelect","fieldName","disabled","defaultOption","parents","SexSelection","checked","YearSelection","hasError","min","defaultState","defaultErrors","checkForForbiddenSymbols","match","generateSlug","split","push","join","getParents","isFormIncomplete","fields","hasIncompleteFields","hasNameErrors","Object","values","error","hasYearErrors","MIN_BORN_YEAR","NewPerson","setFields","setErrors","useOutletContext","handleAddPerson","mothers","fathers","replace","onSubmit","preventDefault","newPerson","generateNewPersonObject","PageNotFound","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d716f986.chunk.js","sourcesContent":["export enum SortBy {\n  name = 'name',\n  sex = 'sex',\n  born = 'born',\n  died = 'died',\n}\n\nexport enum SortOrder {\n  asc = 'asc',\n  desc = 'desc',\n}\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Nav = () => (\n  <div className=\"navbar\">\n    <div className=\"navbar-brand\">\n      <NavLink\n        type=\"button\"\n        to=\"/\"\n        className={({ isActive }) => classNames(\n          'navbar-item',\n          'is-tab',\n          { 'is-active': isActive },\n        )}\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        type=\"button\"\n        to=\"/people\"\n        className={({ isActive }) => classNames(\n          'navbar-item',\n          'is-tab',\n          { 'is-active': isActive },\n        )}\n      >\n        People\n      </NavLink>\n    </div>\n  </div>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { SortBy, SortOrder } from '../../types';\n\ntype ProcessPeople = (people: Person[]) => ProcessedPerson[];\ntype SortPeople = (\n  people: ProcessedPerson[],\n  sortBy: SortBy | null,\n  sortOrder: SortOrder\n) => ProcessedPerson[];\n\nexport const convertToSortByEnum = (sortBy: string | null) => {\n  switch (sortBy) {\n    case 'name':\n      return SortBy.name;\n    case 'sex':\n      return SortBy.sex;\n    case 'born':\n      return SortBy.born;\n    case 'died':\n      return SortBy.died;\n    default:\n      return null;\n  }\n};\n\nexport const convertToSortOrderEnum = (sortOrder: string | null) => {\n  switch (sortOrder) {\n    case 'asc':\n      return SortOrder.asc;\n    case 'desc':\n      return SortOrder.desc;\n    default:\n      return SortOrder.asc;\n  }\n};\n\nexport const processPeople: ProcessPeople = (people) => {\n  return people.map(person => {\n    const mother = people.find(woman => woman.name === person.motherName);\n    const father = people.find(man => man.name === person.fatherName);\n\n    return {\n      ...person,\n      mother: mother || null,\n      father: father || null,\n    };\n  });\n};\n\nexport const sortPeople: SortPeople = (people, sortBy, sortOrder) => {\n  const result = [...people].sort((personA, personB) => {\n    switch (sortBy) {\n      case SortBy.name:\n        return personA.name.localeCompare(personB.name);\n      case SortBy.sex:\n        return personA.sex.localeCompare(personB.sex);\n      case SortBy.born:\n        return personA.born - personB.born;\n      case SortBy.died:\n        return personA.died - personB.died;\n      default:\n        return 1;\n    }\n  });\n\n  return sortOrder === SortOrder.asc ? result : result.reverse();\n};\n","import React from 'react';\nimport { SortBy, SortOrder } from '../../types';\n\ntype Props = {\n  title: string,\n  sortBy: SortBy,\n  selectedSortBy: SortBy | null,\n  selectedSortOrder: SortOrder,\n  handleSortByChange: (sortBy: SortBy) => void,\n};\n\nexport const SortableColumnName: React.FC<Props> = ({\n  title,\n  sortBy,\n  selectedSortBy,\n  selectedSortOrder,\n  handleSortByChange,\n}) => {\n  return (\n    <div className=\"level\">\n      {title}\n      <button\n        type=\"button\"\n        className=\"button is-ghost is-small\"\n        onClick={() => {\n          handleSortByChange(sortBy);\n        }}\n      >\n        {selectedSortBy !== sortBy\n          ? (\n            <img src=\"/images/sort_both.png\" alt=\"sort\" />\n          )\n          : (\n            <img\n              src={`/images/sort_${selectedSortOrder}.png`}\n              alt={`sort-${selectedSortOrder}`}\n            />\n          )}\n      </button>\n    </div>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\n\ntype Props = {\n  name: string,\n  slug: string,\n  sex: string,\n};\n\nexport const PersonName: React.FC<Props> = ({\n  name,\n  slug,\n  sex,\n}) => {\n  const { search } = useLocation();\n\n  return (\n    <Link to={{\n      pathname: `/people/${slug}`,\n      search,\n    }}\n    >\n      <span\n        style={{ color: sex === 'm' ? '#2785db' : '#d83939' }}\n      >\n        {name}\n      </span>\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonName } from '../PersonName';\n\nconst renderParent = (parent: Person | null, useName: string) => {\n  return parent\n    ? <PersonName name={parent.name} slug={parent.slug} sex={parent.sex} />\n    : (<span style={{ fontWeight: 'bold' }}>{useName}</span>);\n};\n\nexport const PersonRow: React.FC<ProcessedPerson> = ({\n  name,\n  sex,\n  born,\n  died,\n  slug,\n  mother,\n  father,\n  motherName,\n  fatherName,\n}) => {\n  const useMotherName = motherName || '-';\n  const useFatherName = fatherName || '-';\n  const { selectedSlug } = useParams<{ selectedSlug: string }>();\n\n  return (\n    <tr\n      className={classNames(\n        'Person',\n        { 'is-selected': slug === selectedSlug },\n      )}\n    >\n      <td><PersonName name={name} slug={slug} sex={sex} /></td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {renderParent(mother, useMotherName)}\n      </td>\n      <td>\n        {renderParent(father, useFatherName)}\n      </td>\n    </tr>\n  );\n};\n","import { SortBy } from '../../types';\n\nexport const columnNames = [\n  {\n    title: 'Name',\n    sortBy: SortBy.name,\n  },\n  {\n    title: 'Sex',\n    sortBy: SortBy.sex,\n  },\n  {\n    title: 'Born',\n    sortBy: SortBy.born,\n  },\n  {\n    title: 'Died',\n    sortBy: SortBy.died,\n  },\n  {\n    title: 'Mother',\n    sortBy: null,\n  },\n  {\n    title: 'Father',\n    sortBy: null,\n  },\n];\n","import classNames from 'classnames';\nimport { SortableColumnName } from '../SortableColumnName';\nimport { PersonRow } from '../PersonRow';\nimport { SortBy, SortOrder } from '../../types';\nimport { columnNames } from './columnNames';\nimport './styles.css';\n\ntype Props = {\n  selectedSortBy: SortBy | null,\n  selectedSortOrder: SortOrder,\n  filteredPeople: ProcessedPerson[],\n  handleSortByChange: (sortBy: SortBy) => void,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  selectedSortBy,\n  selectedSortOrder,\n  filteredPeople,\n  handleSortByChange,\n}) => {\n  return (\n    <table className=\"table is-striped is-hoverable\">\n      <thead>\n        <tr>\n          {\n            columnNames.map(({ title, sortBy }) => {\n              return (\n                <th\n                  key={title}\n                  className={classNames({\n                    'selected-th': sortBy && selectedSortBy === sortBy,\n                  })}\n                >\n                  {sortBy\n                    ? (\n                      <SortableColumnName\n                        title={title}\n                        sortBy={sortBy}\n                        selectedSortBy={selectedSortBy}\n                        selectedSortOrder={selectedSortOrder}\n                        handleSortByChange={handleSortByChange}\n                      />\n                    )\n                    : title}\n                </th>\n              );\n            })\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {filteredPeople.map(person => (\n          <PersonRow key={person.name} {...person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport {\n  Outlet,\n  useLocation,\n  useNavigate,\n  Link,\n} from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { SortBy, SortOrder } from '../../types';\nimport {\n  convertToSortOrderEnum,\n  convertToSortByEnum,\n  processPeople,\n  sortPeople,\n} from './utils';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<ProcessedPerson[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const navigate = useNavigate();\n  const { search, pathname } = useLocation();\n  const searchParams = new URLSearchParams(search);\n\n  const appliedQuery = searchParams.get('query') || '';\n  const selectedSortBy = convertToSortByEnum(searchParams.get('sortBy'));\n  const selectedSortOrder = convertToSortOrderEnum(searchParams.get('sortOrder'));\n\n  const [enteredQuery, setEnteredQuery] = useState(appliedQuery);\n\n  const loadPeople = async () => {\n    const peopleFromServer: Person[] = await getPeople();\n\n    setPeople(processPeople(peopleFromServer));\n    setLoading(false);\n  };\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      navigate({\n        search: searchParams.toString(),\n      });\n    }, 500),\n    [],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEnteredQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleSortByChange = (sortBy: SortBy) => {\n    searchParams.set('sortBy', sortBy);\n\n    if (selectedSortBy !== sortBy) {\n      searchParams.set('sortOrder', 'asc');\n    } else {\n      searchParams.set('sortOrder', selectedSortOrder === SortOrder.asc ? 'desc' : 'asc');\n    }\n\n    navigate({\n      search: searchParams.toString(),\n    });\n  };\n\n  const handleAddPerson = (person: ProcessedPerson) => {\n    setPeople([\n      ...people,\n      person,\n    ]);\n\n    navigate({\n      pathname: '/people',\n      search: searchParams.toString(),\n    });\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  let filteredPeople = people;\n\n  if (appliedQuery) {\n    const lowerCaseQuery = appliedQuery.toLowerCase();\n\n    filteredPeople = people.filter(({ name, motherName, fatherName }) => {\n      return [name, motherName, fatherName].some(\n        field => (field ? field.toLowerCase().includes(lowerCaseQuery) : false),\n      );\n    });\n  }\n\n  if (selectedSortBy) {\n    filteredPeople = sortPeople(filteredPeople, selectedSortBy, selectedSortOrder);\n  }\n\n  return (\n    <>\n      <div className=\"level\">\n        <div className=\"level-item\">\n          <h1 className=\"title\">People</h1>\n        </div>\n      </div>\n      {loading\n        ? (<h2 className=\"subtitle\">Loading people...</h2>)\n        : (\n          <>\n            <div className=\"level\">\n              <div className=\"level-left\">\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={enteredQuery}\n                  onChange={handleQueryChange}\n                />\n              </div>\n              <div className=\"level-right\">\n                {pathname !== '/people/new'\n                  ? (\n                    <Link\n                      type=\"button\"\n                      className=\"button\"\n                      to={{\n                        pathname: '/people/new',\n                        search,\n                      }}\n                    >\n                      Add person\n                    </Link>\n                  )\n                  : (\n                    <div>\n                      <Outlet context={[people, handleAddPerson]} />\n                    </div>\n                  )}\n              </div>\n            </div>\n            <div className=\"level\">\n              <div className=\"level-item\">\n                <PeopleTable\n                  selectedSortBy={selectedSortBy}\n                  selectedSortOrder={selectedSortOrder}\n                  filteredPeople={filteredPeople}\n                  handleSortByChange={handleSortByChange}\n                />\n              </div>\n            </div>\n          </>\n        )}\n    </>\n  );\n};\n","const PEOPLE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => {\n  return fetch(PEOPLE_URL)\n    .then(res => res.json());\n};\n","type Props = {\n  value: string,\n  handleInputChange: (fieldName: keyof FormFields, value: string) => void,\n  validateFields: (fieldName: keyof FormFields) => void,\n  errors: {\n    [key: string]: boolean,\n  }\n};\n\nexport const NameInput: React.FC<Props> = ({\n  value,\n  handleInputChange,\n  validateFields,\n  errors,\n}) => {\n  const { isEmpty, hasForbiddenSymbols, userAlreadyExists } = errors;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor=\"name-input\">\n        Name\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            id=\"name-input\"\n            placeholder=\"Enter Full Name\"\n            value={value}\n            onChange={(e) => {\n              handleInputChange('name', e.target.value);\n            }}\n            onBlur={() => {\n              validateFields('name');\n            }}\n          />\n        </div>\n      </label>\n      <p className=\"help is-danger\">\n        {isEmpty && 'Cannot be empty'}\n        {hasForbiddenSymbols && 'Should only contain letters and spaces'}\n        {userAlreadyExists && 'Person with this name is already in the list'}\n      </p>\n    </div>\n  );\n};\n","type Props = {\n  title: string,\n  value: string,\n  fieldName: keyof FormFields,\n  disabled: boolean,\n  defaultOption: string,\n  parents: ProcessedPerson[],\n  handleInputChange: (fieldName: keyof FormFields, value: string) => void,\n};\n\nexport const ParentSelect: React.FC<Props> = ({\n  title,\n  value,\n  fieldName,\n  disabled,\n  defaultOption,\n  parents,\n  handleInputChange,\n}) => {\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor=\"mother-select\">\n        {title}\n        <div className=\"control\">\n          <div className=\"select\">\n            <select\n              id=\"mother-select\"\n              value={value}\n              onChange={(e) => {\n                handleInputChange(fieldName, e.target.value);\n              }}\n              disabled={disabled}\n            >\n              <option>{defaultOption}</option>\n              {parents.map(({ name }) => (\n                <option value={name} key={name}>{name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </label>\n    </div>\n  );\n};\n","interface Props extends Pick<FormFields, 'sex'> {\n  handleInputChange: (fieldName: keyof FormFields, value: string) => void,\n}\n\nexport const SexSelection: React.FC<Props> = ({\n  sex,\n  handleInputChange,\n}) => {\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor=\"sex-selection\">\n        Sex\n        <div className=\"control\" id=\"sex-selection\">\n          <label className=\"radio\" htmlFor=\"radio-m\">\n            <input\n              type=\"radio\"\n              id=\"radio-m\"\n              name=\"question\"\n              checked={sex === 'm'}\n              onChange={() => {\n                handleInputChange('sex', 'm');\n              }}\n            />\n            M\n          </label>\n          <label className=\"radio\" htmlFor=\"radio-f\">\n            <input\n              type=\"radio\"\n              id=\"radio-f\"\n              name=\"question\"\n              checked={sex === 'f'}\n              onChange={() => {\n                handleInputChange('sex', 'f');\n              }}\n            />\n            F\n          </label>\n        </div>\n      </label>\n    </div>\n  );\n};\n","type Props = {\n  title: string,\n  fieldName: keyof FormFields,\n  value: number | null,\n  hasError: boolean,\n  min: number,\n  disabled: boolean,\n  handleInputChange: (fieldName: keyof FormFields, value: number) => void,\n  validateFields: (fieldName: keyof FormFields) => void,\n};\n\nexport const YearSelection: React.FC<Props> = ({\n  title,\n  fieldName,\n  value,\n  hasError,\n  min,\n  disabled,\n  handleInputChange,\n  validateFields,\n}) => {\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={`${fieldName}-input`}>\n        {title}\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"number\"\n            id={`${fieldName}-input`}\n            placeholder={title}\n            min={min}\n            value={value || ''}\n            onChange={(e) => {\n              handleInputChange(fieldName, +e.target.value);\n            }}\n            onBlur={() => {\n              validateFields(fieldName);\n            }}\n            disabled={disabled}\n          />\n        </div>\n      </label>\n      <p className=\"help is-danger\">\n        {hasError && `Can't be less than ${min}`}\n      </p>\n    </div>\n  );\n};\n","export const defaultState: FormFields = {\n  name: '',\n  sex: null,\n  born: null,\n  died: null,\n  motherName: '',\n  fatherName: '',\n};\n\nexport const defaultErrors: FormErrors = {\n  name: {\n    isEmpty: false,\n    hasForbiddenSymbols: false,\n    userAlreadyExists: false,\n  },\n  born: false,\n  died: false,\n};\n\nexport const checkIfEmpty = (value: string) => {\n  const result = value.replace(/ /g, '');\n\n  return result === '';\n};\n\nexport const checkForForbiddenSymbols = (value: string) => {\n  const result = value.match(/^[a-zA-Z\\s]*$/);\n\n  return !result;\n};\n\nexport const generateSlug = (name: string, born: number) => {\n  const result = name.toLowerCase().split(' ');\n\n  result.push(born.toString());\n\n  return result.join('-');\n};\n\nexport const getParents = (people: ProcessedPerson[], born: number | null, sex: 'f' | 'm') => {\n  return people.filter(\n    person => person.sex === sex,\n  ).filter(\n    mother => (born ? mother.born < born && mother.died > born : true),\n  );\n};\n\nexport const isFormIncomplete = (fields: FormFields, errors: FormErrors) => {\n  const hasIncompleteFields = [\n    fields.name !== '',\n    fields.sex,\n    fields.born,\n    fields.died,\n  ].some(field => !field);\n  const hasNameErrors = Object.values(errors.name).some(error => error);\n  const hasYearErrors = errors.died || errors.born;\n\n  return hasIncompleteFields || hasNameErrors || hasYearErrors;\n};\n\nexport const generateNewPersonObject = (fields: FormFields, people: ProcessedPerson[]) => {\n  const {\n    name, sex, born, died, motherName, fatherName,\n  } = fields;\n\n  const mother = motherName === ''\n    ? null\n    : people.find(person => person.name === motherName) || null;\n\n  const father = fatherName === ''\n    ? null\n    : people.find(person => person.name === fatherName) || null;\n\n  const newPerson: ProcessedPerson = {\n    name,\n    sex: sex || 'f',\n    born: born || 1400,\n    died: died || 1400,\n    motherName: motherName === '' ? null : motherName,\n    fatherName: fatherName === '' ? null : fatherName,\n    slug: generateSlug(name, born || 1400),\n    mother,\n    father,\n  };\n\n  return newPerson;\n};\n","import React, { useState } from 'react';\nimport { useNavigate, useOutletContext } from 'react-router-dom';\nimport { NameInput } from './InputComponents/NameInput';\nimport { ParentSelect } from './InputComponents/ParentSelect';\nimport { SexSelection } from './InputComponents/SexSelection';\nimport { YearSelection } from './InputComponents/YearSelection';\nimport {\n  defaultState,\n  defaultErrors,\n  checkIfEmpty,\n  checkForForbiddenSymbols,\n  generateNewPersonObject,\n  getParents,\n  isFormIncomplete,\n} from './utils';\n\nconst MIN_BORN_YEAR = 1400;\n\ntype OutLetContext = [ProcessedPerson[], (person: ProcessedPerson) => void];\n\nexport const NewPerson = () => {\n  const [fields, setFields] = useState(defaultState);\n  const [errors, setErrors] = useState(defaultErrors);\n  const navigate = useNavigate();\n\n  const [people, handleAddPerson] = useOutletContext<OutLetContext>();\n  const mothers = getParents(people, fields.born, 'f');\n  const fathers = getParents(people, fields.born, 'm');\n\n  const validateFields = (fieldName: keyof FormFields) => {\n    switch (fieldName) {\n      case 'name':\n        setErrors({\n          ...errors,\n          name: {\n            isEmpty: checkIfEmpty(fields.name),\n            hasForbiddenSymbols: checkForForbiddenSymbols(fields.name),\n            userAlreadyExists: !!people.find(person => {\n              return person.name.toLowerCase() === fields.name.toLowerCase();\n            }),\n          },\n        });\n        break;\n      case 'born':\n        setErrors({\n          ...errors,\n          born: fields.born ? fields.born < MIN_BORN_YEAR : false,\n        });\n        break;\n      case 'died':\n        setErrors({\n          ...errors,\n          died: fields.died && fields.born ? fields.died < fields.born : false,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleInputChange = <P extends keyof FormFields>(fieldName: P, value: FormFields[P]) => {\n    setFields({\n      ...fields,\n      [fieldName]: value,\n    });\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (isFormIncomplete(fields, errors)) {\n      return;\n    }\n\n    const newPerson = generateNewPersonObject(fields, people);\n\n    handleAddPerson(newPerson);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"field is-grouped is-grouped-right\">\n          <div className=\"control\">\n            <NameInput\n              value={fields.name}\n              handleInputChange={handleInputChange}\n              validateFields={validateFields}\n              errors={errors.name}\n            />\n          </div>\n\n          <div className=\"control\">\n            <SexSelection\n              sex={fields.sex}\n              handleInputChange={handleInputChange}\n            />\n          </div>\n        </div>\n\n        <div className=\"field is-grouped is-grouped-right\">\n          <div className=\"control\">\n            <YearSelection\n              title=\"Born\"\n              fieldName=\"born\"\n              value={fields.born}\n              min={MIN_BORN_YEAR}\n              disabled={false}\n              handleInputChange={handleInputChange}\n              validateFields={validateFields}\n              hasError={errors.born}\n            />\n          </div>\n\n          <div className=\"control\">\n            <YearSelection\n              title=\"Died\"\n              fieldName=\"died\"\n              value={fields.died}\n              min={fields.born || MIN_BORN_YEAR}\n              disabled={!fields.born}\n              handleInputChange={handleInputChange}\n              validateFields={validateFields}\n              hasError={errors.died}\n            />\n          </div>\n        </div>\n\n        <div className=\"field is-grouped is-grouped-right\">\n          <div className=\"control\">\n            <ParentSelect\n              title=\"Mother\"\n              value={fields.motherName}\n              fieldName=\"motherName\"\n              defaultOption=\"Select mother...\"\n              parents={mothers}\n              disabled={!fields.born}\n              handleInputChange={handleInputChange}\n            />\n          </div>\n\n          <div className=\"control\">\n            <ParentSelect\n              title=\"Father\"\n              value={fields.fatherName}\n              fieldName=\"fatherName\"\n              defaultOption=\"Select father...\"\n              parents={fathers}\n              disabled={!fields.born}\n              handleInputChange={handleInputChange}\n            />\n          </div>\n        </div>\n\n        <div className=\"field is-grouped is-grouped-right\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-link\"\n              disabled={isFormIncomplete(fields, errors)}\n            >\n              Add person\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-link is-light\"\n              onClick={() => navigate(-1)}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found :(</h1>\n);\n","import { Route, Routes, Navigate } from 'react-router-dom';\nimport { Nav } from './Components/Nav';\nimport { HomePage } from './Components/HomePage';\nimport { PeoplePage } from './Components/PeoplePage';\nimport { NewPerson } from './Components/NewPerson';\nimport { PageNotFound } from './Components/PageNotFound';\n\nconst App = () => (\n  <div className=\"App\">\n    <div className=\"container is-max-desktop\">\n      <Nav />\n      <Routes>\n        <Route path=\"/people\" element={<PeoplePage />}>\n          <Route path=\"new\" element={<NewPerson />} />\n          <Route path=\":selectedSlug\" element={<></>} />\n        </Route>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Routes>\n    </div>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}